openapi: 3.0.0
info:
  version: 1.0.0
  title: 미륵관심법 API
  description: '미륵관심법 데이터베이스설계 - 음성 보안 서비스 API 문서입니다.'
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/KIMKIHANGKIKI/Taejo/1.0.0
  - description: 로컬서버
    url: http://localhost:3000
tags: 
  - name: auth
    description: 로그인, 로그아웃, 토큰 리프레시 등
  - name: users
    description: 회원가입, 정보 수정 등
  - name: devices
    description : 기기목록, 추가, 제거 등
  - name: contacts
    description: 문의 내용
security: 
  - {}
  - JWT: []
paths:
  /api/auth/direct:
    post:
      tags:
        - auth
      summary: 직접가입회원 로그인
      operationId: directSignIn
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  data:
                    type: object
                    allOf:
                      - $ref: '#/components/schemas/Token'
        400:
          description: 이메일 혹은 비밀번호 불일치
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/400'
                properties:
                  debugMessage:
                    type: object
                    default: null
      security:
        - {}
  /api/auth/oauth:
    post:
      tags:
        - auth
      summary: SNS 회원 로그인
      operationId: oauthSignIn
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                oauthType:
                  type: string
                  enum:
                    - FACEBOOK
                    - GOOGLE
                  description: OAuth 서비스 종류
                oauthId:
                  type: string
                  description: OAuth 인가코드
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  data:
                    type: object
                    allOf:
                      - $ref: '#/components/schemas/Token'
        400:
          description: OAuth 인가코드 불일치
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/400'
                properties:
                  debugMessage:
                    type: object
                    default: null
      security:
        - {}
  /api/auth/logout:
    post:
      tags:
        - auth
      summary: 로그아웃
      operationId: signOut
      responses:
        200:
          description: 로그아웃 성공
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  message:
                    type: string
                    default: Logout Success
                  data:
                    type: object
                    default: null
        401:
          description: 로그인이 필요함
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/401'
                properties:
                  debugMessage:
                    type: object
                    default: null
        403:
          description: 잘못된 권한 접근
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/403'
                properties:
                  debugMessage:
                    type: object
                    default: null
      security:
        - JWT: []
  /api/auth/refresh:
    post:
      tags:
        - auth
      summary: 토큰 리프레시
      operationId: refreshToken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  format: JWT refresh token
      responses:
        200:
          description: 토큰 리프레시 성공
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  data:
                    type: object
                    allOf:
                      - $ref: '#/components/schemas/Token'
        401:
          description: 로그인이 필요함
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/401'
                properties:
                  debugMessage:
                    type: object
                    default: null
        403:
          description: 잘못된 권한 접근
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/403'
                properties:
                  debugMessage:
                    type: object
                    default: null
      security:
        - JWT: []
        
  /api/users:
    get:
      tags:
        - users
      summary: 내 정보 보기
      description: >-
        Muliple tags can be provided with comma separated strings. Use\ \ tag1,
        tag2, tag3 for testing.
      operationId: getMyInformation
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  data:
                    type: object
                    allOf:
                      - $ref: '#/components/schemas/User'
        '401':
          description: ok
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/401'
                properties:
                  debugMessage:
                    type: object
                    default: null
        '403':
          description: ok
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/403'
                properties:
                  debugMessage:
                    type: object
                    default: null
      security:
        - JWT: []

    delete:
      tags:
        - users
      summary: 회원 탈퇴
      description: >-
        Muliple tags can be provided with comma separated strings. Use\ \ tag1,
        tag2, tag3 for testing.
      operationId: resign
      responses:
        '200':
          description: . . . .successful operation
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  data:
                    type: object
                    default: null
        '401':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/401'
                properties:
                  debugMessage:
                    type: object
                    default: null
        '403':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/403'
                properties:
                  debugMessage:
                    type: object
                    default: null
      security:
        - JWT: []

  /api/users/direct:
    post:
      tags:
        - users
      summary: 직접회원 가입
      description: . . . .Multiple status values can be provided with comma separated strings
      operationId: directJoin
      responses:
        '200':
          description: . . . .successful operation
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  data:
                    type: object
                    properties:
                      email:
                        type: string
                        default: 잘못된 이메일입니다.
                      password:
                        type: string
                        enum:
                          - 비밀번호는 n자 이상, n자 이하여야 합니다.
                          - 비밀번호는 숫자와 영문으로 이루어져야 합니다.
                      name:
                        type: string
                        default: 잘못된 이메일입니다.
                      nickName:
                        type: string
                        default: 잘못된 이메일입니다.
                      phoneNumber:
                        type: string
                        default: 잘못된 이메일입니다.
        '400':
          description: . . . .Invalid status value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/400'
                properties:
                  debugMessage:
                    type: object
                    properties:
                      email:
                        type: string
                        default: 잘못된 이메일입니다.
                      password:
                        type: string
                        enum:
                          - 비밀번호는 n자 이상, n자 이하여야 합니다.
                          - 비밀번호는 숫자와 영문으로 이루어져야 합니다.
                      name:
                        type: string
                        default: 이름은 .
                      nickName:
                        type: string
                        default: 이름은 .
                      phoneNumber:
                        type: string
                        default: 잘못된 이메일입니다.
        '401':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/401'
                properties:
                  debugMessage:
                    type: object
                    default: null
        '403':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/403'
                properties:
                  debugMessage:
                    type: object
                    default: null
      security:
        - {}
  /api/users/oauth:
    post:
      tags:
        - users
      summary: SNS회원 가입
      description: . . . .Multiple status values can be provided with comma separated strings
      operationId: snsJoin
      responses:
        '200':
          description: . . . .successful operation
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  data:
                    type: object
                    allOf:
                      - $ref: '#/components/schemas/Token'
        '400':
          description: . . . .Invalid status value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/400'
                properties:
                  debugMessage:
                    type: object
                    default: null
        '401':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/401'
                properties:
                  debugMessage:
                    type: object
                    default: null
        '403':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/403'
                properties:
                  debugMessage:
                    type: object
                    default: null
      security:
        - {}
  /api/users/certification:
    post:
      tags:
        - users
      summary: 이메일 인증 요청
      description: . . . .Multiple status values can be provided with comma separated strings
      operationId: sendCertificationCode
      responses:
        '200':
          description: . . . .successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ''
            application/xml:
              schema:
                type: array
                items:
                  $ref: ''
        '400':
          description: . . . .Invalid status value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/400'
                properties:
                  debugMessage:
                    type: object
                    default: null
        '401':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/401'
                properties:
                  debugMessage:
                    type: object
                    default: null
        '403':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/403'
                properties:
                  debugMessage:
                    type: object
                    default: null
      security:
        - JWT: []
    put:
      tags:
        - users
      summary: 이메일 인증코드 검사
      description: . . . .Multiple status values can be provided with comma separated strings
      operationId: verifyCertificationCode
      responses:
        '200':
          description: . . . .successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ''
            application/xml:
              schema:
                type: array
                items:
                  $ref: ''
        '400':
          description: . . . .Invalid status value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/400'
                properties:
                  debugMessage:
                    type: object
                    default: null
        '401':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/401'
                properties:
                  debugMessage:
                    type: object
                    default: null
        '403':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/403'
                properties:
                  debugMessage:
                    type: object
                    default: null
      security:
        - JWT: []


  /api/users/password:
    put:
      tags:
        - users
      summary: 비밀번호 수정
      operationId: modifyPassword
      responses:
        '200':
          description: . . . .successful operation
          content:
            application/json:
              schema:
                $ref: ''
            application/xml:
              schema:
                $ref: ''
        '400':
          description: . . . .Invalid ID supplied
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/400'
                properties:
                  debugMessage:
                    type: object
                    default: null
        '401':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/401'
                properties:
                  debugMessage:
                    type: object
                    default: null
        '403':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/403'
                properties:
                  debugMessage:
                    type: object
                    default: null
      security:
        - JWT: []

  /api/users/{userId}/devices:
    get:
      tags:
        - users
      summary: 기기목록 보기
      operationId: getAllDevices
      parameters:
        - name: userId
          in: path
          description: . . . .ID of pet that needs to be fetched
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100000
      responses:
        '200':
          description: . . . .successful operation
          content:
            application/json:
              schema:
                $ref: ''
            application/xml:
              schema:
                $ref: ''
        '400':
          description: . . . .Invalid ID supplied
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  debugMessage:
                    type: object
                    default: null
        '401':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  debugMessage:
                    type: object
                    default: null
        '403':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  debugMessage:
                    type: object
                    default: null
      security:
        - JWT: []
  
    post:
      tags:
        - users
      summary: 기기 추가
      operationId: createDevice
      parameters:
        - name: userId
          in: path
          description: . . . .ID of pet that needs to be fetched
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100000
      responses:
        '200':
          description: . . . .successful operation
          content:
            application/json:
              schema:
                $ref: ''
            application/xml:
              schema:
                $ref: ''
        '400':
          description: . . . .Invalid ID supplied
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/400'
                properties:
                  debugMessage:
                    type: object
                    default: null
        '401':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  debugMessage:
                    type: object
                    default: null
        '403':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  debugMessage:
                    type: object
                    default: null
      security:
        - JWT: []
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
              
  /api/users/{userId}/devices/{deviceId}:
    put:
      tags:
        - users
      summary: 기기 업데이트
      operationId: updateDevice
      parameters:
        - name: userId
          in: path
          description: . . . .ID of pet that needs to be fetched
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100000      
        - name: deviceId
          in: path
          description: . . . .ID of pet that needs to be fetched
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100000
      responses:
        '200':
          description: . . . .successful operation
          content:
            application/json:
              schema:
                $ref: ''
            application/xml:
              schema:
                $ref: ''
        '400':
          description: . . . .Invalid ID supplied
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  debugMessage:
                    type: object
                    default: null
        '401':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  debugMessage:
                    type: object
                    default: null
        '403':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  debugMessage:
                    type: object
                    default: null
      security:
        - JWT: []
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
  
  
    delete:
      tags:
        - users
      summary: 기기 삭제
      operationId: deleteDevice
      parameters:
        - name: userId
          in: path
          description: . . . .ID of pet that needs to be fetched
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100000     
        - name: deviceId
          in: path
          description: . . . .ID of pet that needs to be fetched
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 10
      responses:
        '200':
          description: . . . .successful operation
          content:
            application/json:
              schema:
                $ref: ''
            application/xml:
              schema:
                $ref: ''
        '400':
          description: . . . .Invalid ID supplied
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  debugMessage:
                    type: object
                    default: null
        '401':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  debugMessage:
                    type: object
                    default: null
        '403':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  debugMessage:
                    type: object
                    default: null
      security:
        - JWT: []


  /api/users/{userId}/notifications:
    get:
      tags:
        - users
      summary: 유저별 알림 목록 보기
      operationId: getAllUserNotifications
      parameters:
        - name: userId
          in: path
          description: . . . .ID of pet that needs to be fetched
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100000
      responses:
        '200':
          description: . . . .successful operation
          content:
            application/json:
              schema:
                $ref: ''
            application/xml:
              schema:
                $ref: ''
        '400':
          description: . . . .Invalid ID supplied
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  debugMessage:
                    type: object
                    default: null
        '401':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  debugMessage:
                    type: object
                    default: null
        '403':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  debugMessage:
                    type: object
                    default: null
      security:
        - JWT: []


  /api/devices/{deviceId}/notifications:
    get:
      tags:
        - users
      summary: 기기별 알림 목록 보기
      operationId: getAllDeviceNotifications
      parameters:
        - name: deviceId
          in: path
          description: . . . .ID of pet that needs to be fetched
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100000
      responses:
        '200':
          description: . . . .successful operation
          content:
            application/json:
              schema:
                $ref: ''
            application/xml:
              schema:
                $ref: ''
        '400':
          description: . . . .Invalid ID supplied
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  debugMessage:
                    type: object
                    default: null
        '401':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  debugMessage:
                    type: object
                    default: null
        '403':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  debugMessage:
                    type: object
                    default: null
      security:
        - JWT: []
    post:
      tags:
        - devices
      summary: 알림 추가
      operationId: createNotification
      parameters:
        - name: deviceId
          in: path
          description: . . . .ID of pet that needs to be fetched
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100000
      responses:
        '200':
          description: . . . .successful operation
          content:
            application/json:
              schema:
                $ref: ''
            application/xml:
              schema:
                $ref: ''
        '400':
          description: . . . .Invalid ID supplied
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/400'
                properties:
                  debugMessage:
                    type: object
                    default: null
        '401':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  debugMessage:
                    type: object
                    default: null
        '403':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  debugMessage:
                    type: object
                    default: null
      security:
        - JWT: []
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary

  /api/devices/{deviceId}/notifications/{notificationId}:
    get:
      tags:
        - devices
      summary: 알림 상세 내역 보기
      operationId: checkNotification
      parameters:
        - name: deviceId
          in: path
          description: . . . .ID of pet that needs to be fetched
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100000
        - name: notificationId
          in: path
          description: . . . .ID of pet that needs to be fetched
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100000
      responses:
        '200':
          description: . . . .successful operation
          content:
            application/json:
              schema:
                $ref: ''
            application/xml:
              schema:
                $ref: ''
        '400':
          description: . . . .Invalid ID supplied
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  debugMessage:
                    type: object
                    default: null
        '401':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  debugMessage:
                    type: object
                    default: null
        '403':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  debugMessage:
                    type: object
                    default: null
      security:
        - JWT: []

  
  /api/contacts:
    post:
      tags:
        - contacts
      summary: 비회원 문의 내용
      operationId: nonUserContact
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                name:
                  type: string
                  format: name
                categories:
                  type: string
                  enum:
                    - TechnicalSupport
                    - FeedbackAndSuggestion
                    - ReportAProblemOrBuG
                    - LegalAndCompliance
                    - Other
                    - PressAndMedia
                content:
                  type: string
                  
      responses:
        '200':
          description: . . . .successful operation
          content:
            application/json:
              schema:
                $ref: ''
            application/xml:
              schema:
                $ref: ''
        '400':
          description: . . . .Invalid ID supplied
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/400'
                properties:
                  debugMessage:
                    type: object
                    default: null
        '401':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  debugMessage:
                    type: object
                    default: null
        '403':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  debugMessage:
                    type: object
                    default: null
      security:
        - {}

  /api/contacts/{userId}:
    post:
      tags:
        - contacts
      summary: 회원 문의 내용
      operationId: UserContact
      parameters:
        - name: userId
          in: path
          description: . . . .ID of pet that needs to be fetched
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100000
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                categories:
                  type: string
                  enum:
                    - TechnicalSupport
                    - FeedbackAndSuggestion
                    - ReportAProblemOrBuG
                    - LegalAndCompliance
                    - Other
                    - PressAndMedia
                content:
                  type: string
                  
      responses:
        '200':
          description: . . . .successful operation
          content:
            application/json:
              schema:
                $ref: ''
            application/xml:
              schema:
                $ref: ''
        '400':
          description: . . . .Invalid ID supplied
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/400'
                properties:
                  debugMessage:
                    type: object
                    default: null
        '401':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  debugMessage:
                    type: object
                    default: null
        '403':
          description: . . . .Invalid tag value
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/200'
                properties:
                  debugMessage:
                    type: object
                    default: null
      security:
        - JWT: []

components:
  schemas:
    Token:
      type: object
      properties:
        accessToken:
          type: string
          format: JWT
        refreshToken:
          type: string
          format: JWT
    User:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        email:
          type: string
          format: email
        oauth:
          type: object
          description: . . .
          $ref: ''

    200:
      description: 200 응답 공통 스키마
      type: object
      properties:
        status:
          type: string
          default: 200 OK
        timestamp:
          type: string
          format: date-time
        message:
          type: string
          default: SUCCESS
    400:
      description: 400 응답 공통 스키마
      type: object
      properties:
        status:
          type: string
          default: 400 Bad Request
        timestamp:
          type: string
          format: date-time
        message:
          type: string
          default: INVALID PARAMETER
    401:
      description: 401 응답 공통 스키마
      type: object
      properties:
        status:
          type: string
          default: 401 Unauthorized
        timestamp:
          type: string
          format: date-time
        message:
          type: string
          default: AUTHORIZATION REQUIRED
    403:
      description: 403 응답 공통 스키마
      type: object
      properties:
        status:
          type: string
          default: 403 Forbidden
        timestamp:
          type: string
          format: date-time
        message:
          type: string
          default: NO ACCESS AUTHORITY
    404:
      description: 404 응답 공통 스키마
      type: object
      properties:
        status:
          type: string
          default: 404 Not Found
        timestamp:
          type: string
          format: date-time
        message:
          type: string
          default: NO RESOURCE FOUND
    405:
      description: 405 응답 공통 스키마
      type: object
      properties:
        status:
          type: string
          default: 405 Method Not Allowed
        timestamp:
          type: string
          format: date-time
        message:
          type: string
          default: METHOD NOT ALLOWED
    500:
      description: 500 응답 공통 스키마
      type: object
      properties:
        status:
          type: string
          default: 500 Internal Server Error
        timestamp:
          type: string
          format: date-time
        message:
          type: string
          default: SERVER ERROR
  responses:
    200:
      description: 200 응답 공통 스키마
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                default: 200 OK
              timestamp:
                type: string
                format: date-time
              message:
                type: string
                default: SUCCESS

  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT